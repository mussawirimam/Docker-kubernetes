https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/
############################################ MASTER NODE ############################################ 
### we will use aws for this one, not our own virtual environment. 
### we created the k8s cluster on aws, follow the kubernetes begin notes
this time im using cilium instead of calico

root@master:~# kubectl get pod -n kube-system
NAME                               READY   STATUS    RESTARTS   AGE
cilium-c9cd2                       1/1     Running   0          9m27s
cilium-envoy-8z49b                 1/1     Running   0          9m26s
cilium-envoy-t26zh                 1/1     Running   0          9m27s
cilium-operator-7b48f9fd58-h52sh   1/1     Running   0          9m27s
cilium-rj2kl                       1/1     Running   0          9m26s
coredns-5dd5756b68-9l76w           1/1     Running   0          4m29s
coredns-5dd5756b68-qqprq           1/1     Running   0          4m29s
etcd-master                        1/1     Running   1          2d1h
kube-apiserver-master              1/1     Running   1          2d1h
kube-controller-manager-master     1/1     Running   1          2d1h
kube-proxy-8v52q                   1/1     Running   1          2d1h
kube-proxy-f4xgc                   1/1     Running   1          2d1h
kube-scheduler-master              1/1     Running   1          2d1h
root@master:~#
root@master:~#


root@master:~# kubectl create deployment mango --image nginx --port 80
deployment.apps/mango created
root@master:~# kubectl expose deployment mango --type NodePort
service/mango exposed
root@master:~# kubectl get deployments.apps,svc
NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/mango   1/1     1            1           15s

NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE
service/kubernetes   ClusterIP   10.96.0.1        <none>        443/TCP        2d1h
service/mango        NodePort    10.100.248.117   <none>        80:32257/TCP   11s
root@master:~#

### allow the port ranges between 30000 - 32767 on aws security group 
=== on browser ===
http://34.227.193.217:32257/
Welcome to nginx!
If you see this page, the nginx web server is successfully installed and working. Further configuration is required.

### at the time of installation, I didnt define our version at the command level but in repository we have defined it. 
### I want to update my cluster to higher version of kubernetes
NAME     STATUS   ROLES           AGE     VERSION
master   Ready    control-plane   3d19h   v1.28.15
node1    Ready    <none>          3d19h   v1.28.15
root@master:~#

### cluster upgrade to 
https://kubernetes.io/releases/
if your version is v1.28.15, you cannot jump to the version v1.30. You will have to do incremental jumps example 1.29. only then you can upgrade the version to 1.30.
right now our cluster is 1.28.15 

1.28.10 --> 1.29.4 ---> 1.30.2
scenerio, if your version is of kubernetes is on minor version .10 and kubernetes have released .15, first you will update it to the minor version and then 
you will have to update it to the major version

1 Major version
28 Minor verison
10 path

### To find our last version of kubernetes release
apt update 
root@master:~# apt-cache madison kubeadm
   kubeadm | 1.28.15-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages    <------------ so we are on the minor version .15
   kubeadm | 1.28.14-2.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.13-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.12-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.11-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.10-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.9-2.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.8-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.7-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.6-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.5-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.4-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.3-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.2-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.1-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
   kubeadm | 1.28.0-1.1 | https://pkgs.k8s.io/core:/stable:/v1.28/deb  Packages
root@master:~#

### finding versions for kubernetes architecture
root@master:~# kubectl get node
NAME     STATUS   ROLES           AGE     VERSION
master   Ready    control-plane   3d19h   v1.28.15  <----------------- this information is coming from the kubelet
node1    Ready    <none>          3d19h   v1.28.15

root@master:~# kubectl version
Client Version: v1.28.15
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3
Server Version: v1.28.15
root@master:~#

root@master:~# kubeadm version
kubeadm version: &version.Info{Major:"1", Minor:"28", GitVersion:"v1.28.15", GitCommit:"841856557ef0f6a399096c42635d114d6f2cf7f4", GitTreeState:"clean", BuildDate:"2024-10-22T20:33:16Z", GoVersion:"go1.22.8", Compiler:"gc", Platform:"linux/amd64"}
root@master:~#

root@master:~# systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)       <-------------- daemon configuration file
    Drop-In: /usr/lib/systemd/system/kubelet.service.d    <------------------------------------------- you can check the kubelet version from this file
             └─10-kubeadm.conf
     Active: active (running) since Wed 2025-02-05 12:57:48 UTC; 34s ago
       Docs: https://kubernetes.io/docs/
   Main PID: 3063 (kubelet)
      Tasks: 11 (limit: 4676)
     Memory: 30.8M (peak: 31.3M)
        CPU: 781ms
     CGroup: /system.slice/kubelet.service
             └─3063 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/>

Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209811    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209824    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209844    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209861    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209874    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209905    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209935    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:57:49 master kubelet[3063]: I0205 12:57:49.209956    3063 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for>
Feb 05 12:58:09 master kubelet[3063]: I0205 12:58:09.256523    3063 prober_manager.go:312] "Failed to trigger a manual run" probe="Readiness"
Feb 05 12:58:15 master kubelet[3063]: I0205 12:58:15.859628    3063 prober_manager.go:312] "Failed to trigger a manual run" probe="Readiness"
lines 1-23/23 (END)

root@master:~# whereis kubelet
kubelet: /usr/bin/kubelet
root@master:~# ll /usr/bin/kubelet
-rwxr-xr-x 1 root root 110649604 Oct 22 21:26 /usr/bin/kubelet*
root@master:~# cd /usr/bin/
root@master:/usr/bin# ./kubelet
I0205 13:01:33.420376    3250 server.go:467] "Kubelet version" kubeletVersion="v1.28.15"  <-------------- version of kubelet
I0205 13:01:33.420465    3250 server.go:469] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0205 13:01:33.420730    3250 server.go:630] "Standalone mode, no API client"
W0205 13:01:33.421151    3250 logging.go:59] [core] [Channel #1 SubChannel #2] grpc: addrConn.createTransport failed to connect to {Addr: "/run/containerd/containerd.sock", ServerName: "/run/containerd/containerd.sock", }. Err: connection error: desc = "transport: Error while dialing: dial unix /run/containerd/containerd.sock: connect: no such file or directory"
E0205 13:01:33.421778    3250 run.go:74] "command failed" err="failed to run Kubelet: validate service connection: validate CRI v1 runtime API for endpoint \"unix:///run/containerd/containerd.sock\": rpc error: code = Unavailable desc = connection error: desc = \"transport: Error while dialing: dial unix /run/containerd/containerd.sock: connect: no such file or directory\""
root@master:/usr/bin#

### TIME TO UPGRADE THE VERSION
root@master:/usr/bin# kubeadm upgrade plan
[upgrade/config] Making sure the configuration is correct:
[upgrade/config] Reading configuration from the cluster...
[upgrade/config] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[preflight] Running pre-flight checks.
[upgrade] Running cluster health checks
[upgrade] Fetching available versions to upgrade to
[upgrade/versions] Cluster version: v1.28.15
[upgrade/versions] kubeadm version: v1.28.15
I0205 13:03:38.485718    3270 version.go:256] remote version is much newer: v1.32.1; falling back to: stable-1.28
[upgrade/versions] Target version: v1.28.15
[upgrade/versions] Latest version in the v1.28 series: v1.28.15

### we will need to update our remote repository and version from 1.28 to 1.29. See below :
#sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
#sudo echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
### add latest repo, we will update to the version v1.29 
sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
sudo echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

root@master:/usr/bin# sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
File '/etc/apt/keyrings/kubernetes-apt-keyring.gpg' exists. Overwrite? (y/N) y

root@master:/usr/bin# sudo echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
root@master:/usr/bin#

root@master:/usr/bin# apt update
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Get:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
Get:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
Get:5 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]
Get:4 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease [1192 B]
Get:6 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [838 kB]
Get:7 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/main Translation-en [191 kB]
Get:8 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [151 kB]
Get:9 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1005 kB]
Get:10 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/universe Translation-en [251 kB]
Get:11 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [315 kB]
Get:12 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
Get:13 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Packages [16.3 kB]
Get:14 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
Get:15 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [208 B]
Get:16 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [17.6 kB]
Get:17 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [216 B]
Get:18 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
Get:19 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  Packages [18.8 kB]
Hit:20 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Get:21 http://security.ubuntu.com/ubuntu noble-security/main amd64 Packages [616 kB]
Hit:22 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Get:23 http://security.ubuntu.com/ubuntu noble-security/main amd64 Components [8948 B]
Get:24 http://security.ubuntu.com/ubuntu noble-security/universe amd64 Packages [803 kB]
Get:25 http://security.ubuntu.com/ubuntu noble-security/universe Translation-en [171 kB]
Get:26 http://security.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.0 kB]
Get:27 http://security.ubuntu.com/ubuntu noble-security/restricted amd64 Components [208 B]
Get:28 http://security.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [208 B]
Fetched 4836 kB in 4s (1155 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
71 packages can be upgraded. Run 'apt list --upgradable' to see them.
root@master:/usr/bin#

### now you can see thhrough your that the cache version for kubeadm is updated since you updated the apt package repository to get the v1.29
root@master:/usr/bin# apt-cache madison kubeadm
   kubeadm | 1.29.13-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.12-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.11-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.10-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.9-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.8-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.7-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.6-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.5-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.4-2.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.3-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.2-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.1-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.0-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
root@master:/usr/bin#

### importance of hold but not required here
# first step is to update the kubeadm and then you can update the kubernetes
# holding package means, whenever you are updating the 1.29, previously downloaded kubeadm older version 1.28 will be removed. I want to hold the 1.28, because if something
goes wrong, we can start using the older version. 
# we are not going to hold it for now.
#apt-mark hold kubeadm && \
#apt-get update && apt-get install -y kubeadm=1.29.0-1.1 && \
#apt-mark hold kubeadm


apt-get update && apt-get install -y kubeadm=1.29.0-1.1

ubuntu@master:~$ sudo su -
root@master:~# apt-get update && apt-get install -y kubeadm=1.29.0-1.1
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Get:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:5 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease
Get:6 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [838 kB]
Get:7 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1005 kB]
Hit:8 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Hit:9 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Fetched 1969 kB in 1s (1812 kB/s)
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages will be upgraded:
  kubeadm
1 upgraded, 0 newly installed, 0 to remove and 70 not upgraded.
Need to get 10.1 MB of archives.
After this operation, 389 kB disk space will be freed.
Get:1 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  kubeadm 1.29.0-1.1 [10.1 MB]
Fetched 10.1 MB in 0s (48.9 MB/s)
(Reading database ... 70744 files and directories currently installed.)
Preparing to unpack .../kubeadm_1.29.0-1.1_amd64.deb ...
Unpacking kubeadm (1.29.0-1.1) over (1.28.15-1.1) ...
Setting up kubeadm (1.29.0-1.1) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
root@master:~#

root@master:~# kubeadm version
kubeadm version: &version.Info{Major:"1", Minor:"29", GitVersion:"v1.29.0", GitCommit:"3f7a50f38688eb332e2a1b013678c6435d539ae6", GitTreeState:"clean", BuildDate:"2023-12-13T08:50:10Z", GoVersion:"go1.21.5", Compiler:"gc", Platform:"linux/amd64"}
root@master:~#

### time to upgrade 


root@master:~# kubeadm upgrade plan
[upgrade/config] Making sure the configuration is correct:
[upgrade/config] Reading configuration from the cluster...
[upgrade/config] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[preflight] Running pre-flight checks.
[upgrade] Running cluster health checks
[upgrade] Fetching available versions to upgrade to
[upgrade/versions] Cluster version: v1.28.15
[upgrade/versions] kubeadm version: v1.29.0
I0205 15:06:55.780120    5374 version.go:256] remote version is much newer: v1.32.1; falling back to: stable-1.29
[upgrade/versions] Target version: v1.29.13
[upgrade/versions] Latest version in the v1.28 series: v1.28.15

Components that must be upgraded manually after you have upgraded the control plane with 'kubeadm upgrade apply':
COMPONENT   CURRENT        TARGET
kubelet     2 x v1.28.15   v1.29.13      <--------------------------------------------------------------------------------------

Upgrade to the latest stable version:

COMPONENT                 CURRENT    TARGET <-------------------------------------------------------------------------------------- these are the components that will be updated
kube-apiserver            v1.28.15   v1.29.13
kube-controller-manager   v1.28.15   v1.29.13
kube-scheduler            v1.28.15   v1.29.13
kube-proxy                v1.28.15   v1.29.13
CoreDNS                   v1.10.1    v1.11.1
etcd                      3.5.15-0   3.5.10-0

You can now apply the upgrade by executing the following command:

        kubeadm upgrade apply v1.29.13 <------------------------- IMPORTANT: Dont make mistake if it is not matching the the current kubeadm version that you updated, it will be failing somewhere. to apply the upgrade/ before running this upgrading command, you need to make sure that your kubeadm is running with this version. 

Note: Before you can perform this upgrade, you have to update kubeadm to v1.29.13.

_____________________________________________________________________


The table below shows the current state of component configs as understood by this version of kubeadm.
Configs that have a "yes" mark in the "MANUAL UPGRADE REQUIRED" column require manual config upgrade or
resetting to kubeadm defaults before a successful upgrade can be performed. The version to manually
upgrade to is denoted in the "PREFERRED VERSION" column.

API GROUP                 CURRENT VERSION   PREFERRED VERSION   MANUAL UPGRADE REQUIRED
kubeproxy.config.k8s.io   v1alpha1          v1alpha1            no
kubelet.config.k8s.io     v1beta1           v1beta1             no
_____________________________________________________________________

root@master:~#

######## IMPORTANT
### make sure your kubeadm is matching 
# see the kubeadm is on v1.29.0! if you apply the command to upgrade components of k8s will be failing because of the mismatch. 
root@master:~# kubeadm version
kubeadm version: &version.Info{Major:"1", Minor:"29", GitVersion:"v1.29.0", GitCommit:"3f7a50f38688eb332e2a1b013678c6435d539ae6", GitTreeState:"clean", BuildDate:"2023-12-13T08:50:10Z", GoVersion:"go1.21.5", Compiler:"gc", Platform:"linux/amd64"}
root@master:~#

apt-get update && apt-get install -y kubeadm=1.29.13
kubeadm version: &version.Info{Major:"1", Minor:"29", GitVersion:"v1.29.0", GitCommit:"3f7a50f38688eb332e2a1b013678c6435d539ae6", GitTreeState:"clean", BuildDate:"2023-12-13T08:50:10Z", GoVersion:"go1.21.5", Compiler:"gc", Platform:"linux/amd64"}
root@master:~# apt-get update && apt-get install -y kubeadm=1.29.13
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:5 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease
Hit:6 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Hit:7 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package kubeadm is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source

E: Version '1.29.13' for 'kubeadm' was not found
root@master:~#

### versioning is mentioned like this 
root@master:~# apt-cache madison kubeadm
   kubeadm | 1.29.13-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.12-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.11-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.10-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.9-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.8-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.7-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.6-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.5-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.4-2.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.3-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.2-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.1-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.0-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
root@master:~#

### updating it now 
root@master:~# apt-get update && apt-get install -y kubeadm=1.29.13-1.1
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:5 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease
Hit:6 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Hit:7 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages will be upgraded:
  kubeadm
1 upgraded, 0 newly installed, 0 to remove and 70 not upgraded.
Need to get 10.2 MB of archives.
After this operation, 471 kB of additional disk space will be used.
Get:1 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  kubeadm 1.29.13-1.1 [10.2 MB]
Fetched 10.2 MB in 0s (51.3 MB/s)
(Reading database ... 70744 files and directories currently installed.)
Preparing to unpack .../kubeadm_1.29.13-1.1_amd64.deb ...
Unpacking kubeadm (1.29.13-1.1) over (1.29.0-1.1) ...
Setting up kubeadm (1.29.13-1.1) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
root@master:~#

### kubeadm v1.29.13 is updated, now we can apply the upgrade command from above. First we will plan it, then upgrade it. 
root@master:~# kubeadm version
kubeadm version: &version.Info{Major:"1", Minor:"29", GitVersion:"v1.29.13", GitCommit:"9a58e9398d4aa69d7ad40f40407e54b96025e0c5", GitTreeState:"clean", BuildDate:"2025-01-15T14:41:15Z", GoVersion:"go1.22.10", Compiler:"gc", Platform:"linux/amd64"}
root@master:~#

root@master:~# kubeadm upgrade plan
[upgrade/config] Making sure the configuration is correct:
[upgrade/config] Reading configuration from the cluster...
[upgrade/config] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[preflight] Running pre-flight checks.
[upgrade] Running cluster health checks
[upgrade] Fetching available versions to upgrade to
[upgrade/versions] Cluster version: v1.28.15
[upgrade/versions] kubeadm version: v1.29.13
I0205 15:19:12.976172    6321 version.go:256] remote version is much newer: v1.32.1; falling back to: stable-1.29
[upgrade/versions] Target version: v1.29.13
[upgrade/versions] Latest version in the v1.28 series: v1.28.15

Components that must be upgraded manually after you have upgraded the control plane with 'kubeadm upgrade apply':
COMPONENT   CURRENT        TARGET
kubelet     2 x v1.28.15   v1.29.13

Upgrade to the latest stable version:

COMPONENT                 CURRENT    TARGET
kube-apiserver            v1.28.15   v1.29.13
kube-controller-manager   v1.28.15   v1.29.13
kube-scheduler            v1.28.15   v1.29.13
kube-proxy                v1.28.15   v1.29.13
CoreDNS                   v1.10.1    v1.11.1
etcd                      3.5.15-0   3.5.16-0

You can now apply the upgrade by executing the following command:

        kubeadm upgrade apply v1.29.13 <------------------------------------------------------

_____________________________________________________________________


The table below shows the current state of component configs as understood by this version of kubeadm.
Configs that have a "yes" mark in the "MANUAL UPGRADE REQUIRED" column require manual config upgrade or
resetting to kubeadm defaults before a successful upgrade can be performed. The version to manually
upgrade to is denoted in the "PREFERRED VERSION" column.

API GROUP                 CURRENT VERSION   PREFERRED VERSION   MANUAL UPGRADE REQUIRED
kubeproxy.config.k8s.io   v1alpha1          v1alpha1            no
kubelet.config.k8s.io     v1beta1           v1beta1             no
_____________________________________________________________________

root@master:~#

### now proceed with the command, it is safe to upgrade now without any complications.
root@master:~#  kubeadm upgrade apply v1.29.13
[upgrade/config] Making sure the configuration is correct:
[upgrade/config] Reading configuration from the cluster...
[upgrade/config] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[preflight] Running pre-flight checks.
[upgrade] Running cluster health checks
[upgrade/version] You have chosen to change the cluster version to "v1.29.13"
[upgrade/versions] Cluster version: v1.28.15
[upgrade/versions] kubeadm version: v1.29.13
[upgrade] Are you sure you want to proceed? [y/N]: y
[upgrade/prepull] Pulling images required for setting up a Kubernetes cluster
[upgrade/prepull] This might take a minute or two, depending on the speed of your internet connection
[upgrade/prepull] You can also perform this action in beforehand using 'kubeadm config images pull'
[upgrade/apply] Upgrading your Static Pod-hosted control plane to version "v1.29.13" (timeout: 5m0s)...
[upgrade/etcd] Upgrading to TLS for etcd
[upgrade/staticpods] Preparing for "etcd" upgrade
[upgrade/staticpods] Renewing etcd-server certificate
[upgrade/staticpods] Renewing etcd-peer certificate
[upgrade/staticpods] Renewing etcd-healthcheck-client certificate
[upgrade/staticpods] Moved new manifest to "/etc/kubernetes/manifests/etcd.yaml" and backed up old manifest to "/etc/kubernetes/tmp/kubeadm-backup-manifests-2025-02-05-15-21-10/etcd.yaml"
[upgrade/staticpods] Waiting for the kubelet to restart the component
[upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s)
[apiclient] Found 1 Pods for label selector component=etcd
[upgrade/staticpods] Component "etcd" upgraded successfully!
[upgrade/etcd] Waiting for etcd to become available
[upgrade/staticpods] Writing new Static Pod manifests to "/etc/kubernetes/tmp/kubeadm-upgraded-manifests1208702243"
[upgrade/staticpods] Preparing for "kube-apiserver" upgrade
[upgrade/staticpods] Renewing apiserver certificate
[upgrade/staticpods] Renewing apiserver-kubelet-client certificate
[upgrade/staticpods] Renewing front-proxy-client certificate
[upgrade/staticpods] Renewing apiserver-etcd-client certificate
[upgrade/staticpods] Moved new manifest to "/etc/kubernetes/manifests/kube-apiserver.yaml" and backed up old manifest to "/etc/kubernetes/tmp/kubeadm-backup-manifests-2025-02-05-15-21-10/kube-apiserver.yaml"
[upgrade/staticpods] Waiting for the kubelet to restart the component
[upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s)
[apiclient] Found 1 Pods for label selector component=kube-apiserver
[upgrade/staticpods] Component "kube-apiserver" upgraded successfully!
[upgrade/staticpods] Preparing for "kube-controller-manager" upgrade
[upgrade/staticpods] Renewing controller-manager.conf certificate
[upgrade/staticpods] Moved new manifest to "/etc/kubernetes/manifests/kube-controller-manager.yaml" and backed up old manifest to "/etc/kubernetes/tmp/kubeadm-backup-manifests-2025-02-05-15-21-10/kube-controller-manager.yaml"
[upgrade/staticpods] Waiting for the kubelet to restart the component
[upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s)
[apiclient] Found 1 Pods for label selector component=kube-controller-manager
[upgrade/staticpods] Component "kube-controller-manager" upgraded successfully!
[upgrade/staticpods] Preparing for "kube-scheduler" upgrade
[upgrade/staticpods] Renewing scheduler.conf certificate
[upgrade/staticpods] Moved new manifest to "/etc/kubernetes/manifests/kube-scheduler.yaml" and backed up old manifest to "/etc/kubernetes/tmp/kubeadm-backup-manifests-2025-02-05-15-21-10/kube-scheduler.yaml"
[upgrade/staticpods] Waiting for the kubelet to restart the component
[upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s)
[apiclient] Found 1 Pods for label selector component=kube-scheduler
[upgrade/staticpods] Component "kube-scheduler" upgraded successfully!
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upgrade] Backing up kubelet config file to /etc/kubernetes/tmp/kubeadm-kubelet-config894339879/config.yaml
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

[upgrade/successful] SUCCESS! Your cluster was upgraded to "v1.29.13". Enjoy!

[upgrade/kubelet] Now that your control plane is upgraded, please proceed with upgrading your kubelets if you haven't already done so.
root@master:~#

### we cannot yet "ENJOY!"
root@master:~#

### the version is still old  
root@master:~# kubectl get nodes
NAME     STATUS   ROLES           AGE     VERSION
master   Ready    control-plane   3d22h   v1.28.15
node1    Ready    <none>          3d21h   v1.28.15

### our cluster is updated and component is updated, during the installation it was telling you something which is that 
component which must be upgraded after the upgrade apply 
# from above section:
Components that must be upgraded manually after you have upgraded the control plane with 'kubeadm upgrade apply':
COMPONENT   CURRENT        TARGET
kubelet     2 x v1.28.15   v1.29.13
root@master:~# kubectl get pod -n kube-system
NAME                               READY   STATUS    RESTARTS      AGE
cilium-c9cd2                       1/1     Running   1             44h
cilium-envoy-8z49b                 1/1     Running   1             44h
cilium-envoy-t26zh                 1/1     Running   1             44h
cilium-operator-7b48f9fd58-h52sh   1/1     Running   3 (97s ago)   44h
cilium-rj2kl                       1/1     Running   1             44h
coredns-76f75df574-z5vph           1/1     Running   0             46s
coredns-76f75df574-zlc2p           1/1     Running   0             46s
etcd-master                        1/1     Running   0             2m7s
kube-apiserver-master              1/1     Running   0             85s
kube-controller-manager-master     1/1     Running   0             66s
kube-proxy-5t47m                   1/1     Running   0             44s
kube-proxy-lpj82                   1/1     Running   0             46s
kube-scheduler-master              1/1     Running   0             51s
root@master:~# ^C
root@master:~#

### kubectl is also on previous version, lets upgrade both kubelet and kubectl 
root@master:~# kubectl version
Client Version: v1.28.15
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3
Server Version: v1.29.13
root@master:~#

### upgrading the kubectl 
root@master:~# apt-get update && apt-get install -y kubectl=1.29.13-1.1
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:5 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease
Hit:6 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Hit:7 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages will be upgraded:
  kubectl
1 upgraded, 0 newly installed, 0 to remove and 69 not upgraded.
Need to get 10.6 MB of archives.
After this operation, 602 kB of additional disk space will be used.
Get:1 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  kubectl 1.29.13-1.1 [10.6 MB]
Fetched 10.6 MB in 0s (52.0 MB/s)
(Reading database ... 70744 files and directories currently installed.)
Preparing to unpack .../kubectl_1.29.13-1.1_amd64.deb ...
Unpacking kubectl (1.29.13-1.1) over (1.28.15-1.1) ...
Setting up kubectl (1.29.13-1.1) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
root@master:~#

root@master:~# kubectl version
Client Version: v1.29.13   <----------------------------------------------------------------
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3
Server Version: v1.29.13
root@master:~#


### now update the kubelet as well to the matching version of v1.29 from v1.28
root@master:~# apt-get update && apt-get install -y kubelet=1.29.13-1.1
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:5 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease
Hit:6 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Hit:7 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages will be upgraded:
  kubelet
1 upgraded, 0 newly installed, 0 to remove and 68 not upgraded.
Need to get 19.9 MB of archives.
After this operation, 1962 kB of additional disk space will be used.
Get:1 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  kubelet 1.29.13-1.1 [19.9 MB]
Fetched 19.9 MB in 0s (59.4 MB/s)
(Reading database ... 70744 files and directories currently installed.)
Preparing to unpack .../kubelet_1.29.13-1.1_amd64.deb ...
Unpacking kubelet (1.29.13-1.1) over (1.28.15-1.1) ...
Setting up kubelet (1.29.13-1.1) ...
Scanning processes...
Scanning candidates...
Scanning linux images...

Running kernel seems to be up-to-date.

Restarting services...
 systemctl restart kubelet.service

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
root@master:~#

### whenever you are updating the kubelet, it is important to run these commands below. 
root@master:~# systemctl daemon-reload
root@master:~# systemctl restart kubelet.service
root@master:~#

### your kubernetes control plane is succesfully upgraded to the v.1.29.13 from v1.28.15
# worker node is pending to update. 
root@master:~# kubectl get nodes
NAME     STATUS   ROLES           AGE     VERSION
master   Ready    control-plane   3d22h   v1.29.13
node1    Ready    <none>          3d22h   v1.28.15
root@master:~#



--------------------------------------------------------------------------------------------------------------------------------------------------------------------
############################################ WORKER NODE ############################################ 
### we are not running all those the kubeapi all those kubernetes componenets in worker nodes, we should not bother much but still we have to run one command
root@node1:~# kubeadm upgrade plan
couldn't create a Kubernetes client from file "/etc/kubernetes/admin.conf": failed to load admin kubeconfig: open /etc/kubernetes/admin.conf: no such file or directory
To see the stack trace of this error execute with --v=5 or higher
root@node1:~#

# we cannot run this kubeadm upgrade plan on worker node since it is to be run on the master node only..
### before we run the command needed to update the version on the worker node, you need to update the gpg key and the package repository on your linux machine
# so it can fetch the right repository and provide the gpg key necessary for the packages 
sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
sudo echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

root@node1:~# apt-get install -y kubeadm=1.29.13-1.1
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package kubeadm is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source

E: Version '1.29.13-1.1' for 'kubeadm' was not found
root@node1:~#

# because we didnt add the update 
root@node1:~# apt-get update && apt-get install -y kubeadm=1.29.13-1.1
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Get:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Get:5 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease [1192 B]
Get:6 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [838 kB]
Get:7 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1005 kB]
Get:8 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  Packages [18.8 kB]
Hit:9 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Hit:10 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Fetched 1989 kB in 1s (1882 kB/s)
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages will be upgraded:
  kubeadm
1 upgraded, 0 newly installed, 0 to remove and 70 not upgraded.
Need to get 10.2 MB of archives.
After this operation, 81.9 kB of additional disk space will be used.
Get:1 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  kubeadm 1.29.13-1.1 [10.2 MB]
Fetched 10.2 MB in 0s (44.0 MB/s)
(Reading database ... 70744 files and directories currently installed.)
Preparing to unpack .../kubeadm_1.29.13-1.1_amd64.deb ...
Unpacking kubeadm (1.29.13-1.1) over (1.28.15-1.1) ...      <----------------------------------------------------
Setting up kubeadm (1.29.13-1.1) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
root@node1:~#

### it is updated now
root@node1:~# kubeadm upgrade node
[upgrade] Reading configuration from the cluster...
[upgrade] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[preflight] Running pre-flight checks
[preflight] Skipping prepull. Not a control plane node.
[upgrade] Skipping phase. Not a control plane node.
[upgrade] Backing up kubelet config file to /etc/kubernetes/tmp/kubeadm-kubelet-config1255569350/config.yaml
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[upgrade] The configuration for this node was successfully updated!
[upgrade] Now you should go ahead and upgrade the kubelet package using your package manager.
root@node1:~#

### we will have to update the kubectl and kubelet 
root@node1:~# apt-get update && apt-get install -y kubectl=1.29.13-1.1 kubelet=1.29.13-1.1
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:5 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:4 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  InRelease
Hit:6 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04  InRelease
Hit:7 https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.28/xUbuntu_22.04  InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages will be upgraded:
  kubectl kubelet
2 upgraded, 0 newly installed, 0 to remove and 68 not upgraded.
Need to get 30.5 MB of archives.
After this operation, 2564 kB of additional disk space will be used.
Get:1 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  kubectl 1.29.13-1.1 [10.6 MB]
Get:2 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.29/deb  kubelet 1.29.13-1.1 [19.9 MB]
Fetched 30.5 MB in 0s (68.9 MB/s)
(Reading database ... 70744 files and directories currently installed.)
Preparing to unpack .../kubectl_1.29.13-1.1_amd64.deb ...
Unpacking kubectl (1.29.13-1.1) over (1.28.15-1.1) ...
Preparing to unpack .../kubelet_1.29.13-1.1_amd64.deb ...
Unpacking kubelet (1.29.13-1.1) over (1.28.15-1.1) ...
Setting up kubectl (1.29.13-1.1) ...
Setting up kubelet (1.29.13-1.1) ...
Scanning processes...
Scanning candidates...
Scanning linux images...

Running kernel seems to be up-to-date.

Restarting services...
 systemctl restart kubelet.service

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
root@node1:~#

### MUST AFTER UPDATING
root@node1:~# systemctl daemon-reload
root@node1:~# systemctl restart kubelet.service
root@node1:~#

################# from master node you can see both the master and worker nodes are upgraded to the new version of v1.29.13 from v.1.28.15
root@master:~# kubectl get nodes
NAME     STATUS   ROLES           AGE     VERSION
master   Ready    control-plane   3d22h   v1.29.13
node1    Ready    <none>          3d22h   v1.29.13
root@master:~#
