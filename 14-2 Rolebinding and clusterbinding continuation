RBAC
root@master:~# kubectl -n devops get role,rolebindings.rbac.authorization.k8s.io
NAME                                     CREATED AT
role.rbac.authorization.k8s.io/devrole   2025-01-15T21:51:32Z

### this role is having some permissions with it. 
NAME                                                ROLE           AGE
rolebinding.rbac.authorization.k8s.io/devrolebind   Role/devrole   14h
root@master:~# kubectl -n devops describe role devrole
Name:         devrole
Labels:       <none>
Annotations:  <none>
PolicyRule:
  Resources         Non-Resource URLs  Resource Names  Verbs
  ---------         -----------------  --------------  -----
  pods              []                 []              [create update delete list get]  <------------- permission that the role can perform
  secrets           []                 []              [create update delete list get]  <------------- permission that the role can perform
  deployments.apps  []                 []              [create update delete list get]  <------------- permission that the role can perform
root@master:~#

### rolebinding devrole is binded to the user aneesh
root@master:~# kubectl -n devops describe rolebindings.rbac.authorization.k8s.io devrolebind
Name:         devrolebind
Labels:       <none>
Annotations:  <none>
Role:
  Kind:  Role
  Name:  devrole
Subjects:
  Kind  Name    Namespace
  ----  ----    ---------
  User  aneesh
root@master:~#

### Proccess of the autherization
Kubectl will be sending a request to kubeapi server and kubeapi server will be doing the authentication and autherization.
How this user is coming into the picture that is getting authenticated and is getting autherization. Whenever we are working with the kubernetes cluster, you will see the hidden directory 
called (.kube) 
